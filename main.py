# main.py
import streamlit as st
from PIL import Image
import requests
import os
from dotenv import load_dotenv

load_dotenv()  # Load environment variables from .env file

BASE_URL = os.getenv("BASE_URL", "http://localhost:8080")
# --- Configuraci√≥n de la P√°gina de Streamlit ---
st.set_page_config(
    page_title="Aplicaci√≥n de Detecci√≥n de Melanoma",
    page_icon="ü©∫",
    layout="wide",
    initial_sidebar_state="expanded"
)


# def check_server_health():
#     try:
#         response = requests.get(f"{BASE_URL}/healthz", timeout=5)
#         if response.status_code == 200:
#             return True
#         else:
#             return False
#     except requests.RequestException:
#         return False
    
# Funci√≥n para cargar CSS local
def load_css(file_name):
    with open(file_name) as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

# Cargar el CSS
load_css("assets/style.css")

# Cargar y mostrar el logo
logo = Image.open("assets/logo.png")
st.sidebar.image(logo, width=150)

# T√≠tulo de la Aplicaci√≥n
st.title("Bienvenido a la Aplicaci√≥n de Detecci√≥n de Melanoma ü©∫")

# Introducci√≥n
st.markdown("""
### Detecci√≥n de Melanoma con Precisi√≥n

Esta aplicaci√≥n permite a los usuarios subir im√°genes de la piel para la detecci√≥n de melanoma y realizar an√°lisis avanzados sobre los datos procesados.

Usa la barra lateral para navegar entre las funcionalidades disponibles:
- **Subir y Segmentar**: Sube tu imagen de la piel y obt√©n resultados de segmentaci√≥n y clasificaci√≥n.
- **An√°lisis Avanzado y Listado**: Realiza an√°lisis avanzados y visualiza todos los datos de los usuarios.
""")


# if st.button('Check Server Health'):
#     is_healthy = check_server_health()
#     if is_healthy:
#         st.success('‚úÖ Server is up and running!')
#     else:
#         st.error('‚ùå Server is down or unresponsive.')
# Pie de P√°gina
st.markdown("---")
st.markdown("¬© 2025 Equipo de Detecci√≥n de Melanoma. Todos los derechos reservados.")
